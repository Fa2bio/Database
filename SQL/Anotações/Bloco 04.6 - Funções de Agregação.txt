Um função agregação processa um conjunto de valores contidos em uma única coluna de uma tabela e retorna um único valor como resultado.

#agregacao

#categorias				     #produtos
----------------------------                  ----------------------------------------------------------
|   id   |    nome         |                  | id |descricao| preco_venda | preco_custo | id_categoria|
----------------------------                  ----------------------------------------------------------
|   1    |Material Escolar |                  | 1  |Caderno  |  5.45       | 2.30        |      1      |
|   2    |Acessório Info   |                  | 2  |Caneta   |  1.20       | 0.45        |      1      |
|   3    |Material Escrito |                  | 3  |PenDrive |  120.54     | 32.55       |      2      |
|   4    | Game            |                  | 4  |Mouse    |  17.00      | 4.30        |      2      |
----------------------------                  ----------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------

* MAX

A função MAX analisa um conjunto de valores e retorna o maior entre eles

- SELECT MAX(preco_venda) FROM produtos;

-------------------------
| # | MAX (preco_venda) |
-------------------------
| 1 | 120.54            |
-------------------------

- SELECT id_categoria, MAX(preco_venda) FROM produtos GROUP BY id_categoria;

Neste caso, estamos buscando o maior preço de venda em todas as categorias de produtos que temos. Ao final estamos agrupando pelo id da
categoria.

OBS: quando utilizamos uma função de agregação em um consulta juntamente com outros campos devemos sempre utilizar o agrupamento (GROUP BY)
por algum elemento da consulta

----------------------------------------
| # | id_categoria | MAX (preco_venda) |
----------------------------------------
| 1 |    1         | 5.45              |
| 2 |    2         | 120.54            |
----------------------------------------

- SELECT id_categoria, MAX(preco_venda) FROM produtos GROUP BY id_categoria
HAVING MAX(preco_venda) > 10;

Neste caso, estamos buscando o maior preço de venda em casa uma das categorias de produtos que temos onde o preço de venda seja maior que
3.00 ao final estamos agrupando pelo id da categoria.

OBS: a cláusula HAVING funciona quase como um WHERE, mas é geralmente utilizada em conjunto com funções de agregação enquanto o WHERE é
utilizado com o SELECT

----------------------------------------
| # | id_categoria | MAX (preco_venda) |
----------------------------------------
| 1 |    2         | 120.54            |
----------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------

* MIN

A função min analisa um conjunto de valores e retorna o menor entre eles.

- SELECT MIN(preco_venda) FROM produtos;

-------------------------
| # | MIN (preco_venda) |
-------------------------
| 1 | 1.20              |
-------------------------

----------------------------------------------------------------------------------------------------------------------------------------

* SUM

A função SUM realiza a soma dos valores em uma única coluna e retorna esse resultado

- SELECT SUM(preco_venda) FROM produtos WHERE id_categoria = 1;

-------------------------
| # | SUM (preco_venda) |
-------------------------
| 1 | 6.65              |
-------------------------

----------------------------------------------------------------------------------------------------------------------------------------

* AVG

A função AVG podemos calcular a média aritmética dos valores em uma única coluna

- SELECT AVG(preco_venda) FROM produtos;

-------------------------
| # | AVG (preco_venda) |
-------------------------
| 1 | 36.047500         |
-------------------------

----------------------------------------------------------------------------------------------------------------------------------------

* ROUND

Utilizamos a a função ROUND para arredondar valores e desta forma especificar quantas casas decimais queremos apresentar o valor

- SELECT ROUND(AVG(preco_venda), 2) FROM produtos;

-------------------------
| # | AVG (preco_venda) |
-------------------------
| 1 | 36.05             |
-------------------------

----------------------------------------------------------------------------------------------------------------------------------------

* COUNT

A função COUNT retorna o total de linhas selecionadas. Podemos passar por parâmetro o nome da coluna ou um asterisco.
Por padrão, quando informado o nome de uma coluna, valores do tipo NULL são ignorados, mas quando informado um (*) todas as linhas serão
contabilizadas.

- SELECT COUNT(preco_venda) AS Quantidade FROM produtos WHERE id_categoria = 1;

------------------
| # | Quantidade |
------------------
| 1 | 2          |
------------------

----------------------------------------------------------------------------------------------------------------------------------------